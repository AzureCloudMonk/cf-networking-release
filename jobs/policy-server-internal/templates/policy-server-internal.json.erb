<% unless p("disable") %>
<%
    def db_host
      link("dbconn").if_p("database.host") do |host|
        return host
      end

      if_link("database") do |database_link|
        return database_link.instances[0].address
      end

      raise "must provide dbconn link or database link"
    end
%>

<%=
    require 'json'

    toRender = {
      "listen_host" => p("listen_ip"),
      "log_prefix" => "cfnetworking",
      "debug_server_host" => "127.0.0.1",
      "debug_server_port" => p("debug_port"),
      "health_check_port" => p("health_check_port"),
      "internal_listen_port" => p("internal_listen_port"),
      "database" => {
        "user" => link("dbconn").p("database.username"),
        "type" => link("dbconn").p("database.type"),
        "password" => link("dbconn").p("database.password"),
        "port" => link("dbconn").p("database.port"),
        "database_name" => link("dbconn").p("database.name"),
        "host" => db_host,
        "timeout" => p("database.connect_timeout_seconds"),
        "require_ssl" => link("dbconn").p("database.require_ssl"),
        "ca_cert" => '/var/vcap/jobs/policy-server-internal/config/certs/database_ca.crt',
        'skip_hostname_validation' => link("dbconn").p('database.skip_hostname_validation'),
        'client_cert' => '/var/vcap/jobs/policy-server-internal/config/certs/db_client.crt',
        'client_key' => '/var/vcap/jobs/policy-server-internal/config/certs/db_client.key',
      },
      "max_idle_connections" => p("max_idle_connections"),
      "max_open_connections" => p("max_open_connections"),
      "connections_max_lifetime_seconds" => p("connections_max_lifetime_seconds"),
      "tag_length" => link("tag_length").p("tag_length"),
      "metron_address" => "127.0.0.1:#{p("metron_port")}",
      "log_level" => p("log_level"),
      "enforce_experimental_dynamic_egress_policies" => p("enforce_experimental_dynamic_egress_policies"),

      # hard-coded values, not exposed as bosh spec properties
      "ca_cert_file" => "/var/vcap/jobs/policy-server-internal/config/certs/ca.crt",
      "server_cert_file" => "/var/vcap/jobs/policy-server-internal/config/certs/server.crt",
      "server_key_file" => "/var/vcap/jobs/policy-server-internal/config/certs/server.key",
      "request_timeout" => 5,
    }

    JSON.pretty_generate(toRender)
%>
<% end %>
